{
  "openapi": "3.0.0",
  "info": {
    "title": "Kanban API",
    "version": "1.0.0",
    "description": "API for the Kanban Application"
  },
  "servers": [
    {
      "url": "http://localhost:3001/api",
      "description": "Development server"
    }
  ],
  "tags": [
    {
      "name": "Projects",
      "description": "Operations for managing projects"
    },
    {
      "name": "Releases",
      "description": "Operations for managing project releases"
    },
    {
      "name": "Requirements",
      "description": "Operations related to sprint requirements and activities"
    },
    {
      "name": "Import",
      "description": "Operations for importing data from external sources"
    },
    {
      "name": "Notes",
      "description": "Operations for daily notes"
    },
    {
      "name": "Retrospective",
      "description": "Operations for sprint retrospective items"
    },
    {
      "name": "Defects",
      "description": "Operations for defect tracking"
    }
  ],
  "paths": {
    "/projects": {
      "get": {
        "summary": "Get all projects",
        "tags": [
          "Projects"
        ],
        "responses": {
          "200": {
            "description": "A list of project names",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "success"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "example": [
                        "Project A",
                        "Project B"
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          }
        }
      },
      "post": {
        "summary": "Create a new project",
        "tags": [
          "Projects"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProjectInput"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Project created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "data": {
                      "$ref": "#/components/schemas/Project"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          }
        }
      }
    },
    "/projects/{name}": {
      "delete": {
        "summary": "Delete a project and all its associated data",
        "tags": [
          "Projects"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/ProjectNamePath"
          }
        ],
        "responses": {
          "200": {
            "description": "Project and its data deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "changes": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/ServerError"
          }
        }
      }
    },
    "/releases/{project}": {
      "get": {
        "summary": "Get all releases for a project",
        "tags": [
          "Releases"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/ProjectPath"
          }
        ],
        "responses": {
          "200": {
            "description": "A list of releases for the specified project.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "success"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Release"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          }
        }
      }
    },
    "/releases": {
      "post": {
        "summary": "Create a new release",
        "tags": [
          "Releases"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReleaseInput"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Release created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "data": {
                      "$ref": "#/components/schemas/Release"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          }
        }
      }
    },
    "/releases/{id}": {
      "put": {
        "summary": "Update an existing release",
        "tags": [
          "Releases"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/ReleaseIdPath"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReleaseUpdateInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Release updated successfully"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          }
        }
      },
      "delete": {
        "summary": "Delete a release",
        "tags": [
          "Releases"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/ReleaseIdPath"
          }
        ],
        "responses": {
          "200": {
            "description": "Release deleted successfully"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      }
    },
    "/requirements": {
      "get": {
        "summary": "Get all requirement groups",
        "tags": [
          "Requirements"
        ],
        "responses": {
          "200": {
            "description": "A list of requirement groups with linked defects",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "success"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/RequirementGroup"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          }
        }
      }
    },
    "/activities": {
      "post": {
        "summary": "Create a new activity (can create or update a requirement)",
        "tags": [
          "Requirements"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ActivityInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Activity processed successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "success"
                    },
                    "data": {
                      "$ref": "#/components/schemas/ActivityOutput"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          }
        }
      }
    },
    "/activities/{activityId}": {
      "put": {
        "summary": "Update an existing activity's details",
        "tags": [
          "Requirements"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/ActivityIdPath"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ActivityUpdateInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Activity updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer"
                        },
                        "changes": {
                          "type": "integer"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      }
    },
    "/requirements/{requirementGroupId}/rename": {
      "put": {
        "summary": "Rename a requirement group",
        "tags": [
          "Requirements"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/RequirementGroupIdPath"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RequirementRenameInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Requirement name updated successfully"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/ServerError"
          }
        }
      }
    },
    "/requirements/{requirementGroupId}/set-release": {
      "put": {
        "summary": "Set the release for a requirement group",
        "tags": [
          "Requirements"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/RequirementGroupIdPath"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "release_id": {
                    "type": "integer",
                    "nullable": true,
                    "description": "The ID of the release to associate. Null to disassociate."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Release updated for the requirement group."
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/ServerError"
          }
        }
      }
    },
    "/requirements/{requirementGroupId}": {
      "delete": {
        "summary": "Delete a requirement group and all its activities",
        "tags": [
          "Requirements"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/RequirementGroupIdPath"
          }
        ],
        "responses": {
          "200": {
            "description": "Requirement group deleted successfully"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      }
    },
    "/import/validate": {
      "post": {
        "summary": "Validate a requirements Excel file for import",
        "tags": [
          "Import"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "file": {
                    "type": "string",
                    "format": "binary"
                  },
                  "project": {
                    "type": "string"
                  }
                },
                "required": [
                  "file",
                  "project"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Validation complete."
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "500": {
            "$ref": "#/components/responses/ServerError"
          }
        }
      }
    },
    "/import/requirements": {
      "post": {
        "summary": "Import requirements from an Excel file",
        "tags": [
          "Import"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "file": {
                    "type": "string",
                    "format": "binary"
                  },
                  "project": {
                    "type": "string"
                  },
                  "sprint": {
                    "type": "string"
                  }
                },
                "required": [
                  "file",
                  "project",
                  "sprint"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Import successful."
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "500": {
            "$ref": "#/components/responses/ServerError"
          }
        }
      }
    },
    "/import/defects/validate": {
      "post": {
        "summary": "Validate a defects Excel file for import",
        "tags": [
          "Import"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "file": {
                    "type": "string",
                    "format": "binary"
                  },
                  "project": {
                    "type": "string"
                  }
                },
                "required": [
                  "file",
                  "project"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Validation complete."
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "500": {
            "$ref": "#/components/responses/ServerError"
          }
        }
      }
    },
    "/import/defects": {
      "post": {
        "summary": "Import defects from an Excel file",
        "tags": [
          "Import"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "file": {
                    "type": "string",
                    "format": "binary"
                  },
                  "project": {
                    "type": "string"
                  }
                },
                "required": [
                  "file",
                  "project"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Import successful."
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "500": {
            "$ref": "#/components/responses/ServerError"
          }
        }
      }
    },
    "/notes/{project}": {
      "get": {
        "summary": "Get all notes for a specific project",
        "tags": [
          "Notes"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/ProjectPath"
          }
        ],
        "responses": {
          "200": {
            "description": "A map of notes (date: text)"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          }
        }
      }
    },
    "/notes": {
      "post": {
        "summary": "Create or update a note for a project and date",
        "tags": [
          "Notes"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NoteInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Note processed successfully"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          }
        }
      }
    },
    "/retrospective/{project}": {
      "get": {
        "summary": "Get all retrospective items for a project",
        "tags": [
          "Retrospective"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/ProjectPath"
          }
        ],
        "responses": {
          "200": {
            "description": "A list of retrospective items"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          }
        }
      }
    },
    "/retrospective": {
      "post": {
        "summary": "Add a new retrospective item",
        "tags": [
          "Retrospective"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RetrospectiveItemInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Retrospective item added"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          }
        }
      }
    },
    "/retrospective/{id}": {
      "put": {
        "summary": "Update an existing retrospective item",
        "tags": [
          "Retrospective"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/ItemIdPath"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RetrospectiveItemUpdateInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Retrospective item updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      },
      "delete": {
        "summary": "Delete a retrospective item",
        "tags": [
          "Retrospective"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/ItemIdPath"
          }
        ],
        "responses": {
          "200": {
            "description": "Retrospective item deleted"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      }
    },
    "/defects/all": {
      "get": {
        "summary": "Get all defects from all projects",
        "tags": [
          "Defects"
        ],
        "responses": {
          "200": {
            "description": "A list of all defects"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          }
        }
      }
    },
    "/defects/{project}": {
      "get": {
        "summary": "Get defects for a project",
        "tags": [
          "Defects"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/ProjectPath"
          },
          {
            "name": "statusType",
            "in": "query",
            "description": "The type of defects to retrieve ('active' or 'closed')",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "active",
                "closed"
              ],
              "default": "active"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A list of defects"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          }
        }
      }
    },
    "/defects/{project}/return-counts": {
      "get": {
        "summary": "Get 'Back to Developer' counts for defects in a project",
        "tags": [
          "Defects"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/ProjectPath"
          },
          {
            "name": "statusType",
            "in": "query",
            "description": "Filter defects by their current status ('active' or 'closed')",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "active",
                "closed"
              ],
              "default": "active"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A list of defects with their return counts."
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          }
        }
      }
    },
    "/defects": {
      "post": {
        "summary": "Create a new defect",
        "tags": [
          "Defects"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DefectInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Defect created successfully"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          }
        }
      }
    },
    "/defects/{id}": {
      "put": {
        "summary": "Update an existing defect",
        "tags": [
          "Defects"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/DefectIdPath"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DefectUpdateInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Defect updated successfully"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/ServerError"
          }
        }
      },
      "delete": {
        "summary": "Permanently delete a defect",
        "tags": [
          "Defects"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/DefectIdPath"
          }
        ],
        "responses": {
          "200": {
            "description": "Defect deleted successfully"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      }
    },
    "/defects/{defectId}/history": {
      "get": {
        "summary": "Get history for a specific defect",
        "tags": [
          "Defects"
        ],
        "parameters": [
          {
            "name": "defectId",
            "in": "path",
            "required": true,
            "description": "ID of the defect to get history for",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A list of defect history entries"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Project": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "name": {
            "type": "string"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "ProjectInput": {
        "type": "object",
        "required": [
          "name"
        ],
        "properties": {
          "name": {
            "type": "string",
            "description": "The name of the project."
          }
        }
      },
      "Release": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "project": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "release_date": {
            "type": "string",
            "format": "date"
          },
          "is_current": {
            "type": "integer",
            "description": "1 if current, 0 if not"
          }
        }
      },
      "ReleaseInput": {
        "type": "object",
        "required": [
          "project",
          "name",
          "release_date"
        ],
        "properties": {
          "project": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "release_date": {
            "type": "string",
            "format": "date"
          },
          "is_current": {
            "type": "boolean"
          }
        }
      },
      "ReleaseUpdateInput": {
        "type": "object",
        "required": [
          "project",
          "name",
          "release_date"
        ],
        "properties": {
          "project": {
            "type": "string",
            "description": "Project must be sent for is_current logic"
          },
          "name": {
            "type": "string"
          },
          "release_date": {
            "type": "string",
            "format": "date"
          },
          "is_current": {
            "type": "boolean"
          }
        }
      },
      "RequirementGroup": {
        "type": "object",
        "properties": {
          "id": {
            "type": [
              "integer",
              "string"
            ],
            "description": "Requirement Group ID"
          },
          "project": {
            "type": "string"
          },
          "requirementUserIdentifier": {
            "type": "string",
            "description": "User-facing name/ID"
          },
          "history": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ActivityLog"
            }
          },
          "currentStatusDetails": {
            "$ref": "#/components/schemas/ActivityLog"
          },
          "linkedDefects": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LinkedDefect"
            }
          }
        }
      },
      "ActivityLog": {
        "type": "object",
        "properties": {
          "activityId": {
            "type": "integer"
          },
          "status": {
            "type": "string"
          },
          "date": {
            "type": "string",
            "format": "date-time"
          },
          "comment": {
            "type": "string",
            "nullable": true
          },
          "sprint": {
            "type": "string",
            "nullable": true
          },
          "link": {
            "type": "string",
            "format": "url",
            "nullable": true
          },
          "type": {
            "type": "string",
            "nullable": true
          },
          "tags": {
            "type": "string",
            "nullable": true
          },
          "isCurrent": {
            "type": "boolean"
          },
          "releaseId": {
            "type": "integer",
            "nullable": true
          },
          "releaseName": {
            "type": "string",
            "nullable": true
          },
          "releaseDate": {
            "type": "string",
            "format": "date",
            "nullable": true
          }
        }
      },
      "ActivityInput": {
        "type": "object",
        "required": [
          "project",
          "requirementName",
          "status",
          "statusDate",
          "sprint"
        ],
        "properties": {
          "project": {
            "type": "string"
          },
          "requirementName": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "statusDate": {
            "type": "string",
            "format": "date"
          },
          "comment": {
            "type": "string",
            "nullable": true
          },
          "sprint": {
            "type": "string"
          },
          "link": {
            "type": "string",
            "format": "url",
            "nullable": true
          },
          "type": {
            "type": "string",
            "nullable": true
          },
          "tags": {
            "type": "string",
            "nullable": true
          },
          "key": {
            "type": "string",
            "nullable": true
          },
          "release_id": {
            "type": "integer",
            "nullable": true
          },
          "existingRequirementGroupId": {
            "type": "integer",
            "nullable": true
          }
        }
      },
      "ActivityOutput": {
        "type": "object",
        "properties": {
          "activityDbId": {
            "type": "integer"
          },
          "requirementGroupId": {
            "type": "integer"
          },
          "project": {
            "type": "string"
          },
          "requirementUserIdentifier": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "statusDate": {
            "type": "string",
            "format": "date"
          },
          "comment": {
            "type": "string",
            "nullable": true
          },
          "sprint": {
            "type": "string"
          },
          "link": {
            "type": "string",
            "format": "url",
            "nullable": true
          },
          "type": {
            "type": "string",
            "nullable": true
          },
          "tags": {
            "type": "string",
            "nullable": true
          },
          "isCurrent": {
            "type": "boolean"
          },
          "release_id": {
            "type": "integer",
            "nullable": true
          }
        }
      },
      "ActivityUpdateInput": {
        "type": "object",
        "description": "Fields to update for an activity log. At least one must be provided.",
        "properties": {
          "comment": {
            "type": "string",
            "nullable": true
          },
          "statusDate": {
            "type": "string",
            "format": "date",
            "nullable": true
          },
          "link": {
            "type": "string",
            "format": "url",
            "nullable": true
          },
          "type": {
            "type": "string",
            "nullable": true
          },
          "tags": {
            "type": "string",
            "nullable": true
          },
          "release_id": {
            "type": "integer",
            "nullable": true
          }
        },
        "minProperties": 1
      },
      "RequirementRenameInput": {
        "type": "object",
        "required": [
          "newRequirementName"
        ],
        "properties": {
          "newRequirementName": {
            "type": "string"
          }
        }
      },
      "NoteInput": {
        "type": "object",
        "required": [
          "project",
          "noteDate"
        ],
        "properties": {
          "project": {
            "type": "string"
          },
          "noteDate": {
            "type": "string",
            "format": "date"
          },
          "noteText": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "RetrospectiveItem": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "project": {
            "type": "string"
          },
          "column_type": {
            "type": "string",
            "enum": [
              "well",
              "wrong",
              "improve"
            ]
          },
          "description": {
            "type": "string"
          },
          "item_date": {
            "type": "string",
            "format": "date"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "RetrospectiveItemInput": {
        "type": "object",
        "required": [
          "project",
          "column_type",
          "description",
          "item_date"
        ],
        "properties": {
          "project": {
            "type": "string"
          },
          "column_type": {
            "type": "string",
            "enum": [
              "well",
              "wrong",
              "improve"
            ]
          },
          "description": {
            "type": "string"
          },
          "item_date": {
            "type": "string",
            "format": "date"
          }
        }
      },
      "RetrospectiveItemUpdateInput": {
        "type": "object",
        "properties": {
          "column_type": {
            "type": "string",
            "enum": [
              "well",
              "wrong",
              "improve"
            ],
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "item_date": {
            "type": "string",
            "format": "date",
            "nullable": true
          }
        },
        "minProperties": 1
      },
      "Defect": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "project": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "area": {
            "type": "string"
          },
          "status": {
            "type": "string",
            "enum": [
              "Assigned to Developer",
              "Assigned to Tester",
              "Done",
              "Closed"
            ]
          },
          "link": {
            "type": "string",
            "format": "url",
            "nullable": true
          },
          "created_date": {
            "type": "string",
            "format": "date"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "linkedRequirements": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LinkedRequirement"
            }
          }
        }
      },
      "DefectInput": {
        "type": "object",
        "required": [
          "project",
          "title",
          "area",
          "status",
          "created_date"
        ],
        "properties": {
          "project": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "area": {
            "type": "string"
          },
          "status": {
            "type": "string",
            "enum": [
              "Assigned to Developer",
              "Assigned to Tester",
              "Done"
            ]
          },
          "link": {
            "type": "string",
            "format": "url",
            "nullable": true
          },
          "created_date": {
            "type": "string",
            "format": "date"
          },
          "comment": {
            "type": "string",
            "nullable": true
          },
          "linkedRequirementGroupIds": {
            "type": "array",
            "items": {
              "type": "integer"
            }
          }
        }
      },
      "DefectUpdateInput": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "area": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "string",
            "enum": [
              "Assigned to Developer",
              "Assigned to Tester",
              "Done",
              "Closed"
            ],
            "nullable": true
          },
          "link": {
            "type": "string",
            "format": "url",
            "nullable": true
          },
          "created_date": {
            "type": "string",
            "format": "date",
            "nullable": true
          },
          "comment": {
            "type": "string",
            "nullable": true
          },
          "linkedRequirementGroupIds": {
            "type": "array",
            "items": {
              "type": "integer"
            }
          }
        },
        "minProperties": 1
      },
      "DefectHistoryEntry": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "defect_id": {
            "type": "integer"
          },
          "changes_summary": {
            "type": "string",
            "nullable": true
          },
          "comment": {
            "type": "string",
            "nullable": true
          },
          "changed_at": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "DefectReturnCount": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "title": {
            "type": "string"
          },
          "return_count": {
            "type": "integer"
          }
        }
      },
      "LinkedDefect": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "title": {
            "type": "string"
          }
        }
      },
      "LinkedRequirement": {
        "type": "object",
        "properties": {
          "groupId": {
            "type": "integer"
          },
          "name": {
            "type": "string"
          },
          "sprint": {
            "type": "string"
          }
        }
      },
      "Error": {
        "type": "object",
        "required": [
          "error"
        ],
        "properties": {
          "error": {
            "type": "string"
          }
        }
      }
    },
    "parameters": {
      "ProjectNamePath": {
        "name": "name",
        "in": "path",
        "required": true,
        "description": "Name of the project",
        "schema": {
          "type": "string"
        }
      },
      "ActivityIdPath": {
        "name": "activityId",
        "in": "path",
        "required": true,
        "description": "ID of the specific activity log entry",
        "schema": {
          "type": "integer"
        }
      },
      "RequirementGroupIdPath": {
        "name": "requirementGroupId",
        "in": "path",
        "required": true,
        "description": "ID of the requirement group",
        "schema": {
          "type": "integer"
        }
      },
      "ProjectPath": {
        "name": "project",
        "in": "path",
        "required": true,
        "description": "Name of the project",
        "schema": {
          "type": "string"
        }
      },
      "ItemIdPath": {
        "name": "id",
        "in": "path",
        "required": true,
        "description": "ID of the item",
        "schema": {
          "type": "integer"
        }
      },
      "ReleaseIdPath": {
        "name": "id",
        "in": "path",
        "required": true,
        "description": "ID of the release",
        "schema": {
          "type": "integer"
        }
      },
      "DefectIdPath": {
        "name": "id",
        "in": "path",
        "required": true,
        "description": "ID of the defect",
        "schema": {
          "type": "integer"
        }
      }
    },
    "responses": {
      "BadRequest": {
        "description": "Bad Request",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        }
      },
      "NotFound": {
        "description": "Resource not found",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        }
      },
      "ServerError": {
        "description": "Internal Server Error",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        }
      },
      "Conflict": {
        "description": "Conflict (e.g., resource already exists)",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        }
      }
    }
  }
}